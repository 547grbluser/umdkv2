************************************* USB MegaDrive DevKit v2 **************************************

Version 2 of my USB MegaDrive DevKit. See http://vimeo.com/makestuff/umdkv2-01 for a quick tour.

Components:
    pcb          - The Nexys2-based prototype board
    vhdl         - The FPGA behavioural model.
    m68k/monitor - The UMDKv2 68000 monitor.
    m68k/testrom - Simple ROM used by unit tests (when I've got them ported).
    m68k/menu    - Placeholder for the SD-card menu ROM.
    m68k/menu    - Simple example with EclipseIDE launcher
    scripts      - Various scripts
    hackdump     - Utility for comparing memory dumps
    mkmon        - Utility for converting assembled 68k monitor to a C source file

Before you can build the project you need to build the Starscream 68000 emulator, which you can
build using the build-star.sh script.

You will also need a functional 68000 cross-assembler/compiler. You can build one using the
build-gcc.sh script; it will be installed in /usr/local/x-tools/m68k-unknown-elf. You will also
need GDB/68k, which you can build with the build-gdb.sh script; it will be installed in
/usr/local/bin. And finally there are some minor issues with the version of DDD in the Ubuntu repo;
you can build one from source with the build-ddd.sh script.

Usage:
  A) Load FX2 firmware & configure FPGA:
    sudo linux/rel/umdkv2 -t umdk -i 04B4:8613 -v fffe:0100 -x vhdl/TopLevel.xsvf
  B) Start sonic1.bin running:
    sudo linux/rel/umdkv2 -t umdk -v fffe:0100 -r ../sonic1.bin -s
  C) Start sonic1.bin running and wait for debug connections on TCP/IP port 2000:
    sudo linux/rel/umdkv2 -t umdk -v fffe:0100 -r ../sonic1.bin -s -p 2000
  D) Reset the MegaDrive and wait for debug connections on TCP/IP port 2000:
    sudo linux/rel/umdkv2 -t umdk -v fffe:0100 -p 2000

  Start DDD to connect to a umdkv2 process (see (C) above) and interrupt what's already running:
    scripts/ddd.sh 2000
  Start DDD to connect to a umdkv2 process (see (D) above), load example.elf and stop in main():
    scripts/ddd.sh 2000 m68k/example/example.elf

  You can also install Eclipse/CDT from http://bit.ly/jW4NCb and do:
    File->Import->General->Existing Projects into Workspace and select m68k/example as the root. You
    should then be able to do Run->Debug Configurations->GDB Hardware Debugging->example. The config
    assumes you've already started a umdkv2 process (see (D) above).

  The hackdump program can be used to find the offsets of bytes which change from one specific value
  to another specific value between two memory dumps. In GDB you can dump all 64KiB of the MegaDrive
  RAM by doing this:
    dump binary memory dump.bin 0xFF0000 0xFFFFFF
  You can then compare two such dumps for specific diffs (e.g going from 3 in-game lives down to 2):
    hackdump/linux/rel/hackdump before.bin after.bin 2 3 
  You can graph-display locations in DDD like this:
    graph display *(unsigned short *)0xFFFE12
  You can set such displays to hexadecimal like this:
    set radix 16
  Given an array referenced with unsigned short *p, you can display the first eight items:
    graph display /x p[0]@8

Chris McClelland

2011-07-09
